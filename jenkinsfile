pipeline {
    agent any  
    tools {
        maven 'MAVEN-3.9.8'
    }
    triggers {
        pollSCM('* * * * *')  // Poll SCM every minute
    }

    stages {
        stage('SCM') {
            steps {
                git url: 'https://github.com/shagun72/spring-petclinic.git', branch: 'main'
            }
        }
        stage('BUILD') {
            steps {
                withSonarQubeEnv(credentialsId: 'SONARCLOUD_TOKEN', installationName: 'SONAR_QUBE') { 
                    sh 'mvn clean package org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar -Dsonar.organization=qualitythoughts -Dsonar.projectKey=b602237aadfe830df42d76e4ede274dcf68676a4'
                }    
                junit '**/surefire-reports/*.xml'    
                archiveArtifacts artifacts: '**/target/spring-petclinic-*.jar', allowEmptyArchive: true  // Archive the JAR file, allow empty if no artifacts
            }
        }
        stage('Quality Gate') {            
            steps {
                timeout(time: 1, unit: 'HOURS') {   // Timeout for the Quality Gate step
                    waitForQualityGate abortPipeline: true   // Fail the pipeline if the Quality Gate fails
                }
            }
        }
    }
}
